/*
 * Generated by gdbus-codegen 2.40.2. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __TEST_H__
#define __TEST_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.wx.test.interface1 */

#define TYPE_INTERFACE1 (interface1_get_type ())
#define INTERFACE1(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_INTERFACE1, Interface1))
#define IS_INTERFACE1(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_INTERFACE1))
#define INTERFACE1_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_INTERFACE1, Interface1Iface))

struct _Interface1;
typedef struct _Interface1 Interface1;
typedef struct _Interface1Iface Interface1Iface;

struct _Interface1Iface
{
  GTypeInterface parent_iface;


  gboolean (*handle_add) (
    Interface1 *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_val);

  gboolean (*handle_print) (
    Interface1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_value);

  void (*boradcast) (
    Interface1 *object,
    const gchar *arg_data);

};

GType interface1_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *interface1_interface_info (void);
guint interface1_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void interface1_complete_print (
    Interface1 *object,
    GDBusMethodInvocation *invocation);

void interface1_complete_add (
    Interface1 *object,
    GDBusMethodInvocation *invocation,
    gint sum);



/* D-Bus signal emissions functions: */
void interface1_emit_boradcast (
    Interface1 *object,
    const gchar *arg_data);



/* D-Bus method calls: */
void interface1_call_print (
    Interface1 *proxy,
    const gchar *arg_value,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean interface1_call_print_finish (
    Interface1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean interface1_call_print_sync (
    Interface1 *proxy,
    const gchar *arg_value,
    GCancellable *cancellable,
    GError **error);

void interface1_call_add (
    Interface1 *proxy,
    GVariant *arg_val,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean interface1_call_add_finish (
    Interface1 *proxy,
    gint *out_sum,
    GAsyncResult *res,
    GError **error);

gboolean interface1_call_add_sync (
    Interface1 *proxy,
    GVariant *arg_val,
    gint *out_sum,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_INTERFACE1_PROXY (interface1_proxy_get_type ())
#define INTERFACE1_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_INTERFACE1_PROXY, Interface1Proxy))
#define INTERFACE1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_INTERFACE1_PROXY, Interface1ProxyClass))
#define INTERFACE1_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_INTERFACE1_PROXY, Interface1ProxyClass))
#define IS_INTERFACE1_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_INTERFACE1_PROXY))
#define IS_INTERFACE1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_INTERFACE1_PROXY))

typedef struct _Interface1Proxy Interface1Proxy;
typedef struct _Interface1ProxyClass Interface1ProxyClass;
typedef struct _Interface1ProxyPrivate Interface1ProxyPrivate;

struct _Interface1Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  Interface1ProxyPrivate *priv;
};

struct _Interface1ProxyClass
{
  GDBusProxyClass parent_class;
};

GType interface1_proxy_get_type (void) G_GNUC_CONST;

void interface1_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Interface1 *interface1_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
Interface1 *interface1_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void interface1_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Interface1 *interface1_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
Interface1 *interface1_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_INTERFACE1_SKELETON (interface1_skeleton_get_type ())
#define INTERFACE1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_INTERFACE1_SKELETON, Interface1Skeleton))
#define INTERFACE1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_INTERFACE1_SKELETON, Interface1SkeletonClass))
#define INTERFACE1_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_INTERFACE1_SKELETON, Interface1SkeletonClass))
#define IS_INTERFACE1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_INTERFACE1_SKELETON))
#define IS_INTERFACE1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_INTERFACE1_SKELETON))

typedef struct _Interface1Skeleton Interface1Skeleton;
typedef struct _Interface1SkeletonClass Interface1SkeletonClass;
typedef struct _Interface1SkeletonPrivate Interface1SkeletonPrivate;

struct _Interface1Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  Interface1SkeletonPrivate *priv;
};

struct _Interface1SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType interface1_skeleton_get_type (void) G_GNUC_CONST;

Interface1 *interface1_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.wx.test.interface2 */

#define TYPE_INTERFACE2 (interface2_get_type ())
#define INTERFACE2(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_INTERFACE2, Interface2))
#define IS_INTERFACE2(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_INTERFACE2))
#define INTERFACE2_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_INTERFACE2, Interface2Iface))

struct _Interface2;
typedef struct _Interface2 Interface2;
typedef struct _Interface2Iface Interface2Iface;

struct _Interface2Iface
{
  GTypeInterface parent_iface;

  gboolean (*handle_transfer) (
    Interface2 *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_in_data);

};

GType interface2_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *interface2_interface_info (void);
guint interface2_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void interface2_complete_transfer (
    Interface2 *object,
    GDBusMethodInvocation *invocation,
    GVariant *out_data);



/* D-Bus method calls: */
void interface2_call_transfer (
    Interface2 *proxy,
    GVariant *arg_in_data,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean interface2_call_transfer_finish (
    Interface2 *proxy,
    GVariant **out_out_data,
    GAsyncResult *res,
    GError **error);

gboolean interface2_call_transfer_sync (
    Interface2 *proxy,
    GVariant *arg_in_data,
    GVariant **out_out_data,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_INTERFACE2_PROXY (interface2_proxy_get_type ())
#define INTERFACE2_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_INTERFACE2_PROXY, Interface2Proxy))
#define INTERFACE2_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_INTERFACE2_PROXY, Interface2ProxyClass))
#define INTERFACE2_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_INTERFACE2_PROXY, Interface2ProxyClass))
#define IS_INTERFACE2_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_INTERFACE2_PROXY))
#define IS_INTERFACE2_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_INTERFACE2_PROXY))

typedef struct _Interface2Proxy Interface2Proxy;
typedef struct _Interface2ProxyClass Interface2ProxyClass;
typedef struct _Interface2ProxyPrivate Interface2ProxyPrivate;

struct _Interface2Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  Interface2ProxyPrivate *priv;
};

struct _Interface2ProxyClass
{
  GDBusProxyClass parent_class;
};

GType interface2_proxy_get_type (void) G_GNUC_CONST;

void interface2_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Interface2 *interface2_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
Interface2 *interface2_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void interface2_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Interface2 *interface2_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
Interface2 *interface2_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_INTERFACE2_SKELETON (interface2_skeleton_get_type ())
#define INTERFACE2_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_INTERFACE2_SKELETON, Interface2Skeleton))
#define INTERFACE2_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_INTERFACE2_SKELETON, Interface2SkeletonClass))
#define INTERFACE2_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_INTERFACE2_SKELETON, Interface2SkeletonClass))
#define IS_INTERFACE2_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_INTERFACE2_SKELETON))
#define IS_INTERFACE2_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_INTERFACE2_SKELETON))

typedef struct _Interface2Skeleton Interface2Skeleton;
typedef struct _Interface2SkeletonClass Interface2SkeletonClass;
typedef struct _Interface2SkeletonPrivate Interface2SkeletonPrivate;

struct _Interface2Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  Interface2SkeletonPrivate *priv;
};

struct _Interface2SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType interface2_skeleton_get_type (void) G_GNUC_CONST;

Interface2 *interface2_skeleton_new (void);


G_END_DECLS

#endif /* __TEST_H__ */
